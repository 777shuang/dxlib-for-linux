diff --git a/DxLibMake/DxUseCLib.cpp b/DxLibMake/DxUseCLib.cpp
index c67179e..d2c703c 100644
--- a/DxLibMake/DxUseCLib.cpp
+++ b/DxLibMake/DxUseCLib.cpp
@@ -1047,7 +1047,6 @@ ERR:
 #ifndef DX_NON_JPEGREAD
 
 // (殆ど jdatasrc.c の流用)
-#include "jinclude.h"
 #include "jpeglib.h"
 #include "jerror.h"
 
@@ -1169,11 +1168,11 @@ jpeg_general_src (j_decompress_ptr cinfo, STREAMDATA *Data )
 		/* first time for this JPEG object? */
 		cinfo->src = (struct jpeg_source_mgr *)
 						(*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_PERMANENT,
-						SIZEOF(my_source_general_mgr));
+						sizeof(my_source_general_mgr));
 		src = (my_src_general_ptr) cinfo->src;
 		src->buffer = (JOCTET *)
 					(*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_PERMANENT,
-					INPUT_BUF_SIZE * SIZEOF(JOCTET));
+					INPUT_BUF_SIZE * sizeof(JOCTET));
 	}
 
 	// 関数ポインタなどをセットする
@@ -1411,7 +1410,7 @@ init_destination_general (j_compress_ptr cinfo)
   /* Allocate the output buffer --- it will be released when done with image */
   dest->buffer = (JOCTET *)
       (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
-				  OUTPUT_BUF_SIZE * SIZEOF(JOCTET));
+				  OUTPUT_BUF_SIZE * sizeof(JOCTET));
 
   dest->pub.next_output_byte = dest->buffer;
   dest->pub.free_in_buffer = OUTPUT_BUF_SIZE;
@@ -1456,7 +1455,7 @@ jpeg_general_dest (j_compress_ptr cinfo, DWORD_PTR outfile)
   if (cinfo->dest == NULL) {	/* first time for this JPEG object? */
     cinfo->dest = (struct jpeg_destination_mgr *)
       (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_PERMANENT,
-				  SIZEOF(my_destination_mgr));
+				  sizeof(my_destination_mgr));
   }
 
   dest = (my_dest_ptr) cinfo->dest;
